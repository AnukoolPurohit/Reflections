When would you want to use a remote repository rather than keeping all your work
local?

    I would use a remote repository to share my work and collobarte with other
    developers. I can also use it as a backup incase I was changin systems or 
    face problems on my local system. 
    I can choose to keep the repository local as long as I think it's not "ready"
    at which point I can push changes to the remote.
    
Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    So that we can choose what to pull from the remote rather than bringing 
    everything because we may not need it.

    Also beause you may not have commited everything on the local repository any new
    changes need to be brought in after that to make sure nothing is lost.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Branches are seperate commit histories on the same repository. You would use
    it when you want to try out seperate version of your code locally
    
    Clone is a copy of a previous repository whether done locally or from a remote to
    local. It is used if you are collaborating with someone on code and want to have same
    origin at github, or to simply copy files locally. Pushes to origin from a cloned repo
    will go back to orignal account (if you are added as a colloborater).
    
    Fork is a speical github functionality which allows you to clone an existing
    repository on the github into your own account on github. This allows you to 
    make your own verion of files wihout whoese remote is on your account resulting 
    in not needing another remote. This also makes it easier to give reference to
    the orignal code author.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    This allows for both user and git to check for the diffrence between remote and
    local files. This intern allows user to make pushes or pulls accoringly and lets
    git inform user when the local repository is ahead , behind or diverging from 
    remote.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
